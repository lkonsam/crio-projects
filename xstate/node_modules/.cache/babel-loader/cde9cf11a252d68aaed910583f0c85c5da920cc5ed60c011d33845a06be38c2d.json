{"ast":null,"code":"import axios from \"axios\";\nconst API_END_POINT = `https://crio-location-selector.onrender.com`;\nexport async function fetchCountries() {\n  try {\n    const response = await axios.get(`${API_END_POINT}/countries`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching data: \", error);\n  }\n}\nexport async function fetchStates(countryName) {\n  try {\n    const response = await axios.get(`${API_END_POINT}/country=${countryName}/states`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching data: \", error);\n  }\n}\nexport async function fetchCities(countryName, stateName) {\n  try {\n    const response = await axios.get(`${API_END_POINT}/country=${countryName}/state=${stateName}/cities`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching data: \", error);\n  }\n}","map":{"version":3,"names":["axios","API_END_POINT","fetchCountries","response","get","data","error","console","fetchStates","countryName","fetchCities","stateName"],"sources":["C:/wamp64/www/crio-projects/xstate/src/Api/Api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_END_POINT = `https://crio-location-selector.onrender.com`;\r\n\r\nexport async function fetchCountries(){\r\n    try {\r\n        const response = await axios.get(`${API_END_POINT}/countries`);\r\n        return response.data;\r\n\r\n    } catch (error) {\r\n        console.error(\"Error fetching data: \",error);\r\n    }\r\n}\r\nexport async function fetchStates(countryName){\r\n    try {\r\n        const response = await axios.get(`${API_END_POINT}/country=${countryName}/states`);\r\n        return response.data;\r\n\r\n    } catch (error) {\r\n        console.error(\"Error fetching data: \",error);\r\n    }\r\n}\r\nexport async function fetchCities(countryName, stateName){\r\n    try {\r\n        const response = await axios.get(`${API_END_POINT}/country=${countryName}/state=${stateName}/cities`);\r\n        return response.data;\r\n\r\n    } catch (error) {\r\n        console.error(\"Error fetching data: \",error);\r\n    }\r\n}\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAG,6CAA6C;AAEnE,OAAO,eAAeC,cAAcA,CAAA,EAAE;EAClC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,aAAa,YAAY,CAAC;IAC9D,OAAOE,QAAQ,CAACE,IAAI;EAExB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAACA,KAAK,CAAC;EAChD;AACJ;AACA,OAAO,eAAeE,WAAWA,CAACC,WAAW,EAAC;EAC1C,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,aAAa,YAAYQ,WAAW,SAAS,CAAC;IAClF,OAAON,QAAQ,CAACE,IAAI;EAExB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAACA,KAAK,CAAC;EAChD;AACJ;AACA,OAAO,eAAeI,WAAWA,CAACD,WAAW,EAAEE,SAAS,EAAC;EACrD,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,aAAa,YAAYQ,WAAW,UAAUE,SAAS,SAAS,CAAC;IACrG,OAAOR,QAAQ,CAACE,IAAI;EAExB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAACA,KAAK,CAAC;EAChD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}